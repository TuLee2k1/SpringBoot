package poly.edu.shop.controller.admin;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.util.StringUtils;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import jakarta.validation.Valid;
import poly.edu.shop.domain.Account;
import poly.edu.shop.domain.Category;
import poly.edu.shop.model.AccountDto;
import poly.edu.shop.model.CategoryDto;
import poly.edu.shop.service.AccountService;
import poly.edu.shop.service.CategoryService;

@Controller
@RequestMapping("admin/accounts")
public class AccountController {
	@Autowired
	AccountService accountService;
	
	@GetMapping("add")
	public String add(Model model) {
		
		model.addAttribute("account", new AccountDto());
		
		return "admin/accounts/addOrEdit";
	}
	
	@PostMapping("saveOrUpdate")
	public ModelAndView saveOrUpdate(ModelMap model,
			@Valid @ModelAttribute("account") AccountDto dto,
			BindingResult result ) {
		if (result.hasErrors()) {
			
			return new ModelAndView("admin/accounts/addOrEdit");
		}
		
		Account entity = new Account();
		BeanUtils.copyProperties(dto, entity);
		
		
		accountService.save(entity);
		
		model.addAttribute("message", "Account is saved!");
		
		return new ModelAndView("forward:/admin/accounts",model);
	}
	
//	@GetMapping("edit/{categoryId}")
//	public ModelAndView edit(ModelMap model, @PathVariable("categoryId") Integer categoryId) {
//		
//		Optional<Category> opt = categoryService.findById(categoryId);
//		CategoryDto dto = new CategoryDto();
//		
//		if(opt.isPresent()) {
//			Category entity = opt.get();	
//			
//			BeanUtils.copyProperties(entity, dto);
//			dto.setIsEdit(true);
//			
//			model.addAttribute("category",dto);
//			
//			return new ModelAndView("admin/categories/addOrEdit",model);
//		}
//		
//		model.addAttribute("message", "Category is not existed");
//		
//		return new ModelAndView("forward:/admin/categories", model); 
//		
//	}
//	
//	@GetMapping("delete/{categoryId}")
//	public ModelAndView delete(ModelMap model,  @PathVariable("categoryId") Integer categoryId ) {
//		
//		categoryService.deleteById(categoryId);
//		
//		model.addAttribute("message", "Category is deleted!");
//		
//		
//		return new ModelAndView("forward:/admin/categories/search", model);
//	}
//	
	
//	
	@RequestMapping("")
	public String list(ModelMap model) {
	    List<Account> list  =	accountService.findAll();
		
	    model.addAttribute("accounts", list);
	    
		return "admin/accounts/list";
	}
	
//	@GetMapping("search")
//	public String search(ModelMap model, @RequestParam(name="name", required = false) String name) {
//		List<Category> list = null;
//		
//		if(StringUtils.hasText(name)) {
//			list = categoryService.findByNameContaining(name);
//			
//		}else {
//			list = categoryService.findAll();
//		}
//		
//		model.addAttribute("categories", list);
//		
//		return "admin/categories/search";
//	}
	
}
